version: '3.8'

services:
  # Main application service
  aya-vision-app:
    build:
      context: ./aya_vision_demo  # Build from the aya_vision_demo directory
      dockerfile: ../Dockerfile   # Use the Dockerfile in the project root
    image: aya-vision-demo
    container_name: aya-vision-app
    ports:
      - "5001:5001"  # Map host port 5001 to container port 5001
    environment:
      - FLASK_APP=run.py
      - FLASK_CONFIG=production
      - COHERE_API_KEY=${COHERE_API_KEY}  # Use from .env file or environment
      - SECRET_KEY=${SECRET_KEY:-default_dev_secret_replace_in_production}
      - LOG_LEVEL=WARNING
      - MIN_IMAGES=40  # Production setting
      - MAX_IMAGES=50  # Production setting
    volumes:
      # Optional: Mount a data directory for persistence (if implemented)
      - ./data:/app/data
      # Optional: Mount logs directory for easier access to logs
      - ./logs:/app/logs
    restart: unless-stopped  # Automatically restart the container unless manually stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/health"] # You may need to implement a /health endpoint
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 512M

  # Optional: Add a reverse proxy service like Nginx for production
  # nginx:
  #   image: nginx:alpine
  #   container_name: aya-vision-nginx
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
  #     - ./nginx/ssl:/etc/nginx/ssl
  #   depends_on:
  #     - aya-vision-app
  #   restart: unless-stopped

# Define a custom network
networks:
  default:
    name: aya-vision-network
    driver: bridge

# Define volumes for persistent data
volumes:
  data:
    driver: local
  logs:
    driver: local

# Add this section to your docker-compose.yml file to include the .env file
# Create a .env file in the same directory as your docker-compose.yml with:
# COHERE_API_KEY=your-actual-api-key
# SECRET_KEY=your-secure-random-key 